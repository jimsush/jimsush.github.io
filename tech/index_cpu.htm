<html lang="en"><head>
    <meta charset="UTF-8">
    <title></title>
<style id="system" type="text/css">h1,h2,h3,h4,h5,h6,p,blockquote {    margin: 0;    padding: 0;}body {    font-family: "Helvetica Neue", Helvetica, "Hiragino Sans GB", Arial, sans-serif;    font-size: 13px;    line-height: 18px;    color: #737373;    margin: 10px 13px 10px 13px;}a {    color: #0069d6;}a:hover {    color: #0050a3;    text-decoration: none;}a img {    border: none;}p {    margin-bottom: 9px;}h1,h2,h3,h4,h5,h6 {    color: #404040;    line-height: 36px;}h1 {    margin-bottom: 18px;    font-size: 30px;}h2 {    font-size: 24px;}h3 {    font-size: 18px;}h4 {    font-size: 16px;}h5 {    font-size: 14px;}h6 {    font-size: 13px;}hr {    margin: 0 0 19px;    border: 0;    border-bottom: 1px solid #ccc;}blockquote {    padding: 13px 13px 21px 15px;    margin-bottom: 18px;    font-family:georgia,serif;    font-style: italic;}blockquote:before {    content:"C";    font-size:40px;    margin-left:-10px;    font-family:georgia,serif;    color:#eee;}blockquote p {    font-size: 14px;    font-weight: 300;    line-height: 18px;    margin-bottom: 0;    font-style: italic;}code, pre {    font-family: Monaco, Andale Mono, Courier New, monospace;}code {    background-color: #fee9cc;    color: rgba(0, 0, 0, 0.75);    padding: 1px 3px;    font-size: 12px;    -webkit-border-radius: 3px;    -moz-border-radius: 3px;    border-radius: 3px;}pre {    display: block;    padding: 14px;    margin: 0 0 18px;    line-height: 16px;    font-size: 11px;    border: 1px solid #d9d9d9;    white-space: pre-wrap;    word-wrap: break-word;}pre code {    background-color: #fff;    color:#737373;    font-size: 11px;    padding: 0;}@media screen and (min-width: 768px) {    body {        width: 748px;        margin:10px auto;    }}</style><style id="custom" type="text/css"></style></head>
<body marginheight="0"><h1><code>Su的记事本</code></h1>
<h1><span id="top1">Index与CPU使用率的故事</span></h1>
<h3>背景</h3>
<p>我们做的是一个基于内存的<code>NoSQL</code>分布式缓存系统，虽然是<code>NoSQL</code>的系统，我们依然支持二级索引，Index是个好东西，它能够大大加快查询的速度，一个设计良好的Index能够带来性能极大的提升，但有时不合适的Index也会让你的系统性能严重下降。

</p>
<h3>Case 1: 有Index时，过于频繁的Update导致CPU奇高</h3>
<p>某些数据是实时高频交易数据，同一条记录在短时间内会更新很多次，此时我们系统的CPU非常高，仔细分析后发现CPU的大部分时间被消耗在某个Index的update上。这个字段记录交易的<code>status</code>，<code>字符型</code>，只有几个<code>枚举值</code>，我们的二级索引是基于<code>Map&lt;String,List&gt;</code>的，结果每次更新status时，都会把他从old status对应的<code>List</code>中遍历出来，并删除，然后放入map的new status对应的<code>List</code>中，因为update过于频繁，对这些list的操作也非常频繁，不停的遍历，删除，插入，导致CPU使用率非常高。因为这个status是枚举型的，离散度不高，建index没有太多必要，更为郁闷的是，根本就没有query要用到这个index field，也就是说以前建index,更新index都是白费的，而他们还导致了CPU使用率居高不下。后来去掉index后，CPU马上下来，也没影响到query。

</p>
<h3>Case 2: 无Index时，过于频繁的Query导致CPU奇高</h3>
<p>最近一段时间，某个缓存程序的进程的CPU常常1800%（多核），看上去特别吓人，而且影响到其他线程，甚至其他进程。后来发现在这段时间有大量的<code>Query</code>,这类query语句<code>where</code>条件字段很多，但都不是index field，导致要<code>遍历所有数据</code>，每个都要进行<code>复杂的比较</code>，最后CPU一下就上去了。这类查询一执行完，CPU马上恢复正常。后来增加了index，当这些大量查询过来后，因为不再有全表扫描和遍历，所以CPU使用率就没怎么上去，一切表现得非常完美。

</p>
<h3>总结</h3>
<p>因为不是数据库，<code>二级索引</code>机制都要靠自己实现，在使用的过程中碰到了太多的坑，通过这些问题，也逐步加深了对index的理解，并不断完善index的实现，虽然有时也挺郁闷，但解决后感觉还是不错的。



</p>
<p>Tags: <code>Index</code> <code>CPU Usage</code>




</p>
<hr>
<p>  <a href="http://jimsush.github.io/index.html">Back to home</a>



</p>

</body></html>